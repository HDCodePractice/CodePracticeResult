<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>BaseFile</key>
	<string>Chapters/Answers.playgroundchapter/Pages/Template.playgroundpage/main.swift</string>
	<key>Diffs</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>func genChessBoard()-&gt;[[String]]{
    var board : [[String]] = []
    for i in 0...9{
        var row = [String]()
        for j in 0...8{
            row.append("--")
        }
        board.append(row)
    }
    return board
}

var chessBoard = genChessBoard()


var chessName : [String] = ["炮","炮","俥","傌","傌","俥","车","车","马","马","相","相","象","象","仕","仕","士","士","将","帥","砲","砲"]
var chessRow : [Int] = [7,7,9,9,9,9,0,0,0,0,9,9,0,0,9,9,0,0,0,9,2,2]
var chessColumn : [Int] = [1,7,0,1,7,8,0,8,1,7,2,6,2,6,3,5,3,5,4,4,1,7]


for i in stride(from: 0, to: 9, by: 2){
    chessName.append("兵")
    chessRow.append(6)
    chessColumn.append(i)
}
for i in stride(from: 0, to: 9, by: 2){
    chessName.append("卒")
    chessRow.append(3)
    chessColumn.append(i)
}

for i in 0..&lt;chessName.count{
    chessBoard[chessRow[i]][chessColumn[i]]=chessName[i]
}


func checkHorse(board:[[String]],positions:[[Int]])-&gt;Bool{
    let from = positions[0]
    let to = positions[1]
    // 检查from上放的是不是马或傌
    if ["马","傌"].contains(board[from[0]][from[1]]) {
        // from 到 to 是不是一个日
        if abs(from[0]-to[0])+abs(from[1]-to[1])==3 {
            // 是不是有蹩马腿
            // 向下的日
            if to[0]-from[0]==2{
                if board[from[0]+1][from[1]]=="--"{
                    return true
                }
            }
            // 向上的日
            if from[0]-to[0]==2{
                if board[from[0]-1][from[1]]=="--"{
                    return true
                }
            }
            // 向左的日
            if from[1]-to[1]==2{
                if board[from[0]][from[1]-1]=="--"{
                    return true
                }
            }
            // 向右的日
            // 向左的日
            if to[1]-from[1]==2{
                if board[from[0]][from[1]+1]=="--"{
                    return true
                }
            }
        }
    }
    return false
}
func checkElephant(board:[[String]],positions:[[Int]])-&gt;Bool{
    let from = positions[0]
    let to = positions[1]
    if ["象","相"].contains(board[from[0]][from[1]]) {
        if abs(from[0]-to[0])+abs(from[1]-to[1])==4 {
            if to[0]-from[0] == 2&amp;&amp;to[1]-from[1] == -2||to[0]-from[0] == 2&amp;&amp;to[1]-from[1] == 2{
                if board[abs(from[1]-to[1])-1][abs(from[1]-to[1])-1]=="--"{
                    return true
                }
            }
            if (to[0]-from[0] == -2&amp;&amp;to[1]-from[1] == 2)||(to[0]-from[0] == -2&amp;&amp;to[1]-from[1] == -2){
                return true
                if board[(from[1]+to[1])/2][(from[0]+to[0])/2]=="--"{
                    return true
                }
            }
        }
    }
    return false
}
let e = checkElephant(board:chessBoard,positions:[[0,2],[2,0]])
print(e)
let c = checkHorse(board: chessBoard, positions: [[0,1],[2,0]])
print(c)
func showBoard(board:[[String]]){
    var showString = ""
    for row in board{
        for i in row{
            showString += i
        }
        showString += "\n"
    }
    show(showString)
}
showBoard(board: chessBoard)

</string>
			<key>ModifiedRange</key>
			<string>{242, 3006}</string>
			<key>OriginalContent</key>
			<string></string>
			<key>OriginalRange</key>
			<string>{242, 0}</string>
		</dict>
	</array>
	<key>FormatVersion</key>
	<integer>2</integer>
</dict>
</plist>
