<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Diff</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>// 定一个struct 叫 人
// 人 有 三个属性： 名字、性别、居住地、Coding级别、学习时间、是否幼儿园毕业、是否以完成过一期学习、书写过的代码行数
// 人 有 一个方法： 练习（代码行数：Int）：为现在的代码行数增加Int行，如果每100行代码还会增加1小时学习时间，同时如果累计学习时间超过100小时，Coding级别增加一级
// 定义一个数组，名为 学生们， 里面有 Bernie、Tian、Divid
// 我们可以显示出所有的学生信息
// 为每个学生增加3次随机数为10/30/90的代码练习行数
// 再次显示出所有的学生信息

struct Food{
    // new need var
    var name : String 
    var duration : Int 
    // optional
    var count : Int = 0
    
    func getTimeString()-&gt;String{
        let time = duration
        let minutes = time / 60
        let secondsInt = time % 60
        let seconds = secondsInt&lt;10 ? "0\(secondsInt)" : "\(secondsInt)"
        return "\(minutes):\(seconds)"
    }
}

var foods : [Food] = [
    Food(name: "Chicken", duration: 60),
    Food(name: "Pork", duration: 60),
    Food(name: "Snake", duration: 60),
    Food(name: "Shark", duration: 60),
    Food(name: "Megalodon", duration: 120),
    Food(name: "Fish", duration: 40, count:100),
    
]

show("\(foods)")

for food in foods{
    show("\(food.name):\(food.duration) \(food.count)  \(food.getTimeString())")
}

// 定一个struct 叫人
//人有 三个属性：名字， 性别，居住地，coding级别，学习时间，是否幼儿园毕业，是否完成过一期学习，书写过的代码行数
//人 有 一个方法：练习（代码行数： Int）：为现有的代码行数增加Int行，如果每100行代码还会增加1小时学习时间，同时如果累计学习时间超过100小时，coding级别增加1级
//定义一个数组 名为学生们，里面有 b，t，d
//我们可以显示出所有的学生信息
//为每个学生增加3次随机数为10/30/90的代码练习行数
//再次显示出所以的学生信息

struct Person {
    var name : String
    var gender : String = "m"
    var state : String 
    var codingLevel : Int = 0
    var learningTime : Int = 0
    var graduated: Bool = false
    var isSemester: Bool = false
    var lines: Int = 0
    
    mutating func practice(linesAdded: Int){
        lines += linesAdded
        learningTime = lines/100
        codingLevel = learningTime/100
    }
}

struct School{
    var name: String
    var address: String
}

struct Student{
    var person: Person
    var school: School
}


var students:[Person]=[
    Person(name: "Bernie", gender: "m", state: "MA", graduated: true, isSemester: true),
    Person(name: "Tian", gender: "m", state: "TX", graduated: true, isSemester: true),
    Person(name: "David", gender: "m", state: "CA", graduated: true, isSemester: true)
]

func showStudents(students:[Person]){
    for student in students{
        show("\(student.name) \(student.gender) \(student.state) Level:\(student.codingLevel) Time:\(student.learningTime) Graduated:\(student.graduated) isSemester:\(student.isSemester) lines:\(student.lines) ")
    }
}

showStudents(students: students)

for i in 1...3{
    show("==============\(i)================")
    for index in 0..&lt;students.count{
        students[index].practice(linesAdded:[100,3000,9000].randomElement()!)
    }
    showStudents(students: students)
}
</string>
			<key>ModifiedRange</key>
			<string>{265, 2683}</string>
			<key>OriginalContent</key>
			<string>show("/*#-localizable-zone(whatIsYourNameText)*/What’s your name?/*#-end-localizable-zone*/")

let name = ask("/*#-localizable-zone(nameText)*/Name/*#-end-localizable-zone*/")

show("/*#-localizable-zone(hiText)*/Hi /*#-end-localizable-zone*/" + name)

</string>
			<key>OriginalRange</key>
			<string>{265, 253}</string>
		</dict>
	</array>
	<key>File</key>
	<string>Chapters/Answers.playgroundchapter/Pages/Text.playgroundpage/main.swift</string>
</dict>
</plist>
